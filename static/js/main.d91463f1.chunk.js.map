{"version":3,"sources":["context/MovieContext.tsx","components/MovieItem.tsx","components/MovieHistoryItem.tsx","App.tsx","components/MovieModal.tsx","index.tsx"],"names":["MovieContext","createContext","MovieProvider","children","useState","moviesResults","setMoviesResults","movieHistory","setMovieHistory","title","id","director","releaseDate","selectedMovie","setSelectedMovie","error","setError","value","Provider","MovieItem","useContext","className","onClick","MovieHistoryItem","props","console","log","App","messageResult","setMessageResult","searchParam","setSearchParam","loading","setLoading","searchMovieWithParam","event","a","preventDefault","toLowerCase","axios","get","response","data","results","length","mappedResults","map","movie","episode_id","release_date","mappedHistory","histMovie","onSubmit","type","placeholder","onChange","target","updateInputField","MovieModal","clearState","useEffect","tabIndex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d91463f1.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\ndeclare interface IContextState {\r\n  moviesResults: any[];\r\n  setMoviesResults: any;\r\n  movieHistory: any;\r\n  setMovieHistory: any;\r\n  selectedMovie: any;\r\n  setSelectedMovie: any;\r\n  error: any;\r\n  setError: any;\r\n  messageResult: any;\r\n  setMessageResult: any;\r\n}\r\n\r\ndeclare interface ISelectedMovie {\r\n  title: string | null;\r\n  id: number | null;\r\n  director: string | null;\r\n  releaseDate: string | null;\r\n}\r\nexport const MovieContext = createContext<IContextState | null>(\r\n  {} as IContextState\r\n);\r\n\r\nexport const MovieProvider = ({ children }: any) => {\r\n  const [moviesResults, setMoviesResults] = useState([]);\r\n  const [movieHistory, setMovieHistory] = useState<ISelectedMovie[]>([]);\r\n  const [selectedMovie, setSelectedMovie] = useState<ISelectedMovie>({\r\n    title: null,\r\n    id: null,\r\n    director: null,\r\n    releaseDate: null,\r\n  });\r\n  const [error, setError] = useState<null | string>(null);\r\n  const [messageResult, setMessageResult] = useState<null | string>(\r\n    'Search For A Star Wars Movie'\r\n  );\r\n\r\n  const value: any = [\r\n    moviesResults,\r\n    setMoviesResults,\r\n    movieHistory,\r\n    setMovieHistory,\r\n    selectedMovie,\r\n    setSelectedMovie,\r\n    error,\r\n    setError,\r\n    messageResult,\r\n    setMessageResult,\r\n  ];\r\n\r\n  return (\r\n    <MovieContext.Provider value={value}>{children}</MovieContext.Provider>\r\n  );\r\n};\r\n","import { useContext } from 'react';\r\nimport { MovieContext } from '../context/MovieContext';\r\n// @ts-ignore\r\nconst MovieItem = ({ title, id, director, releaseDate }) => {\r\n  // @ts-ignore\r\n  const [selectedMovie, setSelectedMovie, movieHistory, setMovieHistory] =\r\n    useContext(MovieContext);\r\n\r\n  const handleStateUpdate = () => {\r\n    /**\r\n     * FIX THE STUPID FUCKING STATE CLEAR WHEN INFO BUTTON PUSHED\r\n     * This poesse setSelectedMovie is the culprit -_-\r\n     **/\r\n    setSelectedMovie({ title, id, director, releaseDate });\r\n    // @ts-ignore\r\n    setMovieHistory((movieHistory) => [\r\n      ...movieHistory,\r\n      { title: title, id: id, director: director, releaseDate: releaseDate },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      key={id}\r\n      className=\"m-2 p-3 d-flex flex-row justify-content-between align-items-center bg-dark\"\r\n    >\r\n      <h2 className=\"me-1\">{title}</h2>\r\n\r\n      <div\r\n        className=\"btn btn-primary\"\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#exampleModal\"\r\n        onClick={() => handleStateUpdate()}\r\n      >\r\n        More Info\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieItem;\r\n","import React, { useContext } from 'react';\r\nimport { MovieContext } from '../context/MovieContext';\r\n// { title, id, director, releaseDate }\r\nconst MovieHistoryItem = (props: any) => {\r\n  const [selectedMovie, setSelectedMovie]: any = useContext(MovieContext);\r\n  console.log(`hist props`, props);\r\n\r\n  return (\r\n    <div\r\n      key={props.id}\r\n      className=\"m-2 p-3 d-flex flex-row justify-content-between align-items-center\"\r\n    >\r\n      <h2 className=\"me-1\">{props.title}</h2>\r\n\r\n      <div\r\n        className=\"btn btn-primary\"\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#exampleModal\"\r\n        onClick={() =>\r\n          setSelectedMovie({\r\n            title: props.title,\r\n            id: props.id,\r\n            director: props.director,\r\n            releaseDate: props.releaseDate,\r\n          })\r\n        }\r\n      >\r\n        View Again\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieHistoryItem;\r\n","import './App.css';\r\nimport { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport MovieItem from './components/MovieItem';\r\nimport MovieHistoryItem from './components/MovieHistoryItem';\r\n\r\nimport { MovieContext } from './context/MovieContext';\r\n\r\nfunction App() {\r\n  const [\r\n    moviesResults,\r\n    setMoviesResults,\r\n    movieHistory,\r\n    setMovieHistory,\r\n    selectedMovie,\r\n    setSelectedMovie,\r\n    error,\r\n    setError,\r\n    messageResult,\r\n    setMessageResult,\r\n  ]: any = useContext(MovieContext);\r\n\r\n  const [searchParam, setSearchParam] = useState<string>('');\r\n\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const searchMovieWithParam = async (\r\n    event: React.FormEvent<HTMLInputElement>\r\n  ) => {\r\n    event.preventDefault();\r\n    setError(null);\r\n    setMessageResult(null);\r\n    setLoading(true);\r\n    setMoviesResults([]);\r\n\r\n    if (searchParam === '') {\r\n      setLoading(false);\r\n      return setError('Please fill in the field to search for a movie');\r\n    }\r\n\r\n    //Easter Egg\r\n    if (searchParam.toLowerCase() === 'hello there') {\r\n      setLoading(false);\r\n      return setMessageResult('General Kenobi');\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `https://swapi.dev/api/films/?search=${searchParam}`\r\n      );\r\n      if (response.data.results.length >= 1) {\r\n        setMessageResult('We got some results (☞ﾟヮﾟ)☞');\r\n      } else {\r\n        setMessageResult(\r\n          'No results found... (╯°□°）╯︵ ┻━┻ (maybe search \"Hello there\")'\r\n        );\r\n      }\r\n      console.log(`search results`, response.data.results);\r\n      await setMoviesResults(response.data.results);\r\n    } catch (error) {\r\n      setError(\r\n        'Could Not Reach Servers... Please check your connection ༼ つ ◕_◕ ༽つ'\r\n      );\r\n      console.error(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const updateInputField = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    let { value } = event.target;\r\n    setError(null);\r\n    setSearchParam(value);\r\n  };\r\n\r\n  const mappedResults =\r\n    moviesResults.length > 0 &&\r\n    // @ts-ignore\r\n    moviesResults.map((movie) => (\r\n      <MovieItem\r\n        title={movie.title}\r\n        id={movie.episode_id}\r\n        director={movie.director}\r\n        releaseDate={movie.release_date}\r\n      />\r\n    ));\r\n\r\n  const mappedHistory = movieHistory.map((histMovie: any) => (\r\n    <MovieHistoryItem\r\n      title={histMovie.title}\r\n      id={histMovie.id}\r\n      director={histMovie.director}\r\n      releaseDate={histMovie.releaseDate}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"app-container text-center \">\r\n      <header className=\"header bg-dark pb-3 mb-5\">\r\n        <h1 className=\"text-light\">\r\n          Willkommen bei der einfachsten Star Wars-App\r\n        </h1>\r\n        <h1 className=\"text-secondary\">\r\n          (<span className=\"text-danger\">♥</span>¬\r\n          <span className=\"text-danger\">♥</span>;)\r\n        </h1>\r\n        <div className=\"d-flex flex-column align-items-center p-2\">\r\n          <form\r\n            className=\"w-100\"\r\n            // @ts-ignore\r\n\r\n            onSubmit={(event) => searchMovieWithParam(event)}\r\n          >\r\n            <div className=\"input-group input-field mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search A Movie\"\r\n                aria-label=\"Search A Movie\"\r\n                aria-describedby=\"button-addon2\"\r\n                value={searchParam}\r\n                onChange={(event) => updateInputField(event)}\r\n              />\r\n\r\n              <button\r\n                className=\"btn btn-outline-primary\"\r\n                type=\"submit\"\r\n                id=\"button-addon2\"\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        {loading && <h2 className=\"text-secondary\">Searching the Cosmos</h2>}\r\n        {error && <h2 className=\"text-danger\">{error}</h2>}\r\n        {messageResult && <h2 className=\"text-primary\">{messageResult}</h2>}\r\n      </header>\r\n\r\n      <div className=\"container text-light\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6 col-xs-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-12 \">\r\n                {moviesResults.length > 0 ? mappedResults : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-6 col-xs-12\">\r\n            <h2>View History</h2>\r\n            {movieHistory.length > 0 && (\r\n              <button\r\n                className=\"btn btn-danger mb-2\"\r\n                onClick={() => setMovieHistory([])}\r\n              >\r\n                Clear History\r\n              </button>\r\n            )}\r\n\r\n            <div>\r\n              {movieHistory.length < 1 ? 'No Search History' : mappedHistory}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { MovieContext } from '../context/MovieContext';\r\n\r\nconst MovieModal: React.FC = () => {\r\n  const [selectedMovie, setSelectedMovie]: any = useContext(MovieContext);\r\n\r\n  const clearState = () => {\r\n    setSelectedMovie({\r\n      title: null,\r\n      id: null,\r\n      director: null,\r\n      releaseDate: null,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(`modal movie deets`, selectedMovie);\r\n  }, [selectedMovie]);\r\n\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"exampleModal\"\r\n      tabIndex={-1}\r\n      aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n              {selectedMovie.title}\r\n            </h5>\r\n\r\n            <div\r\n              className=\"btn-close\"\r\n              // data-bs-dismiss=\"modal\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#exampleModal\"\r\n              aria-label=\"Close\"\r\n              onClick={() => clearState()}\r\n            ></div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <h3>Director: {selectedMovie.director}</h3>\r\n            <h4>Movie Number: {selectedMovie.id}</h4>\r\n          </div>\r\n          <div className=\"ms-3\">Date Created: {selectedMovie.releaseDate}</div>\r\n\r\n          <div className=\"modal-footer\">\r\n            <div\r\n              className=\"btn btn-secondary\"\r\n              data-bs-dismiss=\"modal\"\r\n              onClick={() => clearState()}\r\n            >\r\n              Close\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieModal;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { MovieProvider } from './context/MovieContext';\r\nimport MovieModal from './components/MovieModal';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MovieProvider>\r\n      <App />\r\n      <MovieModal />\r\n    </MovieProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}